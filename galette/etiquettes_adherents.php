<?php
/**
 * Generation d'un PDF d'étiquettes
 *
 * La création des étiquettes au format pdf se fait 
 * depuis la page de gestion des adhérents en sélectionnant
 *   les adhérents  dans la liste
 *
 * Le format des étiquettes et leur mise en page est définie
 * dans l'écran des préférences
 *
 * @package    Galette
 * @author     Frédéric Jaqcuot
 * @copyright  2004 Frédéric Jaqcuot
 * @license    http://www.gnu.org/licenses/old-licenses/gpl-2.0.html GPL License 2.0
 * @version    $Id$
 * @since      Disponible depuis la Release 0.62
 */
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//

/**
 * 
 */

	include("includes/config.inc.php");
	include(WEB_ROOT."includes/database.inc.php"); 
	include(WEB_ROOT."includes/session.inc.php");

	if ($_SESSION["logged_status"]==0) {
		header("location: index.php");
		die();
	}
	if ($_SESSION["admin_status"]==0) {
		header("location: voir_adherent.php");
		die();
	}

	include_once(WEB_ROOT."includes/i18n.inc.php");
    require_once (WEB_ROOT."classes/pdf.class.php");
	
	$mailing_adh = array();
	if (isset($_SESSION['galette']['labels'])) {
		while (list($key,$value)=each($_SESSION['galette']['labels']))
			$mailing_adh[]=$value;
        unset($_SESSION['galette']['cards']);
	}
	else
		die();

		$requete = "SELECT id_adh, nom_adh, prenom_adh, adresse_adh,
									titre_adh, cp_adh, ville_adh, pays_adh, adresse2_adh
									FROM ".PREFIX_DB."adherents
			       				WHERE ";
		$where_clause = "";
		while(list($key,$value)=each($mailing_adh)) {
			if ($where_clause!="")
				$where_clause .= " OR ";
			$where_clause .= "id_adh=".$DB->qstr($value, get_magic_quotes_gpc());
		}
		$requete .= $where_clause." ORDER by nom_adh, prenom_adh;";
		$resultat = &$DB->Execute($requete);
		if ($resultat->EOF)
			die();
		
		$doc_title = _T("Member's Labels");
		$doc_subject = _T("Generated by Galette");
		$doc_keywords = _T("Labels");
// Create new PDF document
		$pdf = new PDF("P","mm","A4",true,"UTF-8"); 

// Set document information
		$pdf->SetCreator(PDF_CREATOR);
		$pdf->SetAuthor(PDF_AUTHOR);
		$pdf->SetTitle($doc_title);
		$pdf->SetSubject($doc_subject);
		$pdf->SetKeywords($doc_keywords);

// No hearders and footers
		$pdf->SetPrintHeader(false);
		$pdf->SetPrintFooter(false);
		$pdf->setFooterMargin(0);
		$pdf->setHeaderMargin(0);

// Show full page
		$pdf->SetDisplayMode("fullpage");

// Disable Auto Page breaks
		$pdf->SetAutoPageBreak(false,0);

// Set colors
		$pdf->SetDrawColor(160,160,160);
		$pdf->SetTextColor(0);

// Set margins
		$pdf->SetMargins(PREF_ETIQ_MARGES_H, PREF_ETIQ_MARGES_V);
// Set font
      $pdf->SetFont("FreeSerif","",PREF_ETIQ_CORPS);

// Set origin
// Top left corner		
	   $yorigin=round(PREF_ETIQ_MARGES_V);
	   $xorigin=round(PREF_ETIQ_MARGES_H);
// Label width
		$w = round(PREF_ETIQ_HSIZE);
// Label heigth
		$h = round(PREF_ETIQ_VSIZE);
// Line heigth
		$line_h=round($h/5);
	   $nb_etiq=0;

// Set title
		while (!$resultat->EOF) {
			switch($resultat->fields[4]){
				case "1" :
					$nom_adh_ext = _T("Mr.");
					break;
				case "2" :
					$nom_adh_ext = _T("Mrs.");
					break;
				case "3" :
					$nom_adh_ext = _T("Miss.");
					break;
				case "4" :
					$nom_adh_ext = _T("Society");
					break;
				default :
					$nom_adh_ext = "";
			}
// Detect page breaks
			if ($nb_etiq % (PREF_ETIQ_COLS * PREF_ETIQ_ROWS)==0){
				$pdf->AddPage();
			}
// Compute label position
			$col=$nb_etiq % PREF_ETIQ_COLS;
			$row=($nb_etiq/PREF_ETIQ_COLS) % PREF_ETIQ_ROWS;
// Set label origin
			$x = $xorigin + $col*(round(PREF_ETIQ_HSIZE)+round(PREF_ETIQ_HSPACE));
			$y = $yorigin + $row*(round(PREF_ETIQ_VSIZE)+round(PREF_ETIQ_VSPACE));
// Draw a frame around the label
			$pdf->Rect($x,$y,$w,$h);
// Print full name
			$nom_adh_ext .= " ".strtoupper($resultat->fields[1])." ".ucfirst(strtolower($resultat->fields[2]));
			$pdf->SetXY($x,$y);
			$pdf->Cell($w,$line_h,mb_convert_encoding($nom_adh_ext,"UTF-8"),0,0,"C",0);
// Print first line of adress
			$pdf->SetXY($x,$y+$line_h);
			$pdf->Cell($w,$line_h,mb_convert_encoding($resultat->fields[3],"UTF-8"),0,0,"C",0);
// Print second line of adress
			$pdf->SetXY($x,$y+$line_h*2);
			$pdf->Cell($w,$line_h,mb_convert_encoding($resultat->fields[8],"UTF-8"),0,0,"C",0);
// Print zip code and town
			$pdf->SetXY($x,$y+$line_h*3);
			$pdf->Cell($w,$line_h,mb_convert_encoding($resultat->fields[5]."  -  ".$resultat->fields[6],"UTF-8"),0,0,"C",0);
// Print country
			$pdf->SetXY($x,$y+$line_h*4);
			$pdf->Cell($w,$line_h,mb_convert_encoding($resultat->fields[7],"UTF-8"),0,0,"C",0);
			$resultat->MoveNext();
			$nb_etiq++;
		}
		$resultat->Close();
// Send PDF code to browser
		$pdf->Output(_T("Labels").".pdf","D");
?>
